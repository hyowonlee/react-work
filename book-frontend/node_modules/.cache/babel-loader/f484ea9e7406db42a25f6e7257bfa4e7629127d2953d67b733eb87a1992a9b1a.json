{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\react work\\\\book-frontend\\\\src\\\\components\\\\pages\\\\book\\\\UpdateForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateForm = () => {\n  _s();\n  let navigate = useNavigate();\n  const [book, setBook] = useState({\n    title: '',\n    author: ''\n  });\n  const changeValue = e => {\n    setBook({\n      ...book,\n      // ...안쓰면 title 적고 author 적을때 초기화되니 이전 데이터를 가지고 있도록 ...을 사용\n      [e.target.name]: e.target.value // //computed property name (js 문법 키값 동적할당) 태그에서 name과 value를 받아옴\n    });\n  };\n  const submitBook = e => {\n    e.preventDefault(); // form태그에서 submit이 되면 새로고침되는데 그걸 막기위해 submit의 역할을 막는 메소드\n    fetch('http://localhost:8080/book', {\n      // 요청시 backend에서 crossorigin 세팅을 해서 외부에서도 api 사용하게 해야됨 여기선 해당 java Controller method에 @Crossorigin 어노테이션 추가함\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(book) // js객체를 json 데이터로 변경\n    }).then(res => {\n      if (res.status === 201) {\n        return res.json(); //받은 json데이터를 js 객체로 변경\n      } else {\n        return null;\n      }\n    }).then(res => {\n      if (res !== null) {\n        navigate('/'); // react router dom 6버전의 화면 전환\n      } else {\n        alert('등록 실패');\n      }\n    }).catch(err => alert(err)); // catch는 fetch에서 에러를 잡는데 \"네트워크 에러만\" 잡아줌\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitBook,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"title\",\n          type: \"text\",\n          placeholder: \"Enter Title\",\n          onChange: changeValue // state에 값을 넣기 위해 함수 호출(값 변경마다 호출됨)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"author\",\n          type: \"text\",\n          placeholder: \"Enter Author\",\n          onChange: changeValue // state에 값을 넣기 위해 함수 호출(값 변경마다 호출됨)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateForm, \"Mt6ZiK8orM3Pb5Lf9oyD2vfs7zA=\", false, function () {\n  return [useNavigate];\n});\n_c = UpdateForm;\nexport default UpdateForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"names":["React","useState","Button","Form","useNavigate","jsxDEV","_jsxDEV","UpdateForm","_s","navigate","book","setBook","title","author","changeValue","e","target","name","value","submitBook","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","status","json","alert","catch","err","children","onSubmit","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","onChange","variant","_c","$RefreshReg$"],"sources":["D:/workspace/react work/book-frontend/src/components/pages/book/UpdateForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UpdateForm = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [book, setBook] = useState({\r\n    title: '',\r\n    author: '',\r\n  });\r\n\r\n  const changeValue = (e) => {\r\n    setBook({\r\n      ...book, // ...안쓰면 title 적고 author 적을때 초기화되니 이전 데이터를 가지고 있도록 ...을 사용\r\n      [e.target.name]: e.target.value, // //computed property name (js 문법 키값 동적할당) 태그에서 name과 value를 받아옴\r\n    });\r\n  };\r\n\r\n  const submitBook = (e) => {\r\n    e.preventDefault(); // form태그에서 submit이 되면 새로고침되는데 그걸 막기위해 submit의 역할을 막는 메소드\r\n    fetch('http://localhost:8080/book', {\r\n      // 요청시 backend에서 crossorigin 세팅을 해서 외부에서도 api 사용하게 해야됨 여기선 해당 java Controller method에 @Crossorigin 어노테이션 추가함\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n      },\r\n      body: JSON.stringify(book), // js객체를 json 데이터로 변경\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 201) {\r\n          return res.json(); //받은 json데이터를 js 객체로 변경\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          navigate('/'); // react router dom 6버전의 화면 전환\r\n        } else {\r\n          alert('등록 실패');\r\n        }\r\n      })\r\n      .catch((err) => alert(err)); // catch는 fetch에서 에러를 잡는데 \"네트워크 에러만\" 잡아줌\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* form submit시 수행할 함수 지정 onSubmit 새로고침 막으려고 지정함*/}\r\n      <Form onSubmit={submitBook}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            name=\"title\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Title\"\r\n            onChange={changeValue} // state에 값을 넣기 위해 함수 호출(값 변경마다 호출됨)\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Author</Form.Label>\r\n          <Form.Control\r\n            name=\"author\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Author\"\r\n            onChange={changeValue} // state에 값을 넣기 위해 함수 호출(값 변경마다 호출됨)\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}