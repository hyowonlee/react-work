{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\react work\\\\react-my-app\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Home from '../components/home/Home';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  // http 요청을 한다고 가정(js에서 http요청은 jquery ajax(외부lib), fetch(네이티브js), axios(외부lib)\n  // 근데 jquery는 쓰지마라)\n  // 이런 로직은 Header같은 컴포넌트만들어놓은 파일에선 하지마라 왜냐면 컴포넌트는 재사용되니까 필요없는데 딸려갈수도있음\n  // 그러니 변수저장이나 로직같은건 컴포넌트 조립하는 페이지파일에서 해라\n  const [boards, setBoards] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [user, setUser] = useState([]);\n  const increaseNumber = () => {\n    setNumber(number + 1);\n  };\n\n  //최초 한번만 실행되게\n  useEffect(() => {\n    //http로 비동기 다운로드 했다고 가정\n    let data = [{\n      id: 1,\n      title: 'title1',\n      content: 'content1'\n    }, {\n      id: 2,\n      title: 'title2',\n      content: 'content2'\n    }, {\n      id: 3,\n      title: 'title3',\n      content: 'content3'\n    }];\n\n    //비동기 다운로드 했으니 다운 다 안돼도 화면은 뜰거임 그럼 다운 다 되기전엔 해당 값이 비어있다\n    //다운이 다 되고 아래의 setBoards를 실행하는 순간 state 값의 변화가 일어나니 재랜더링이 일어나서\n    //해당하는 값이 들어가게 될것 그래서 이 값은 반드시 state 값이여야 함 아니면 다운로드된 값이 보여지지 않음\n    setBoards([...data]);\n    setUser({\n      id: 1,\n      username: 'ssar'\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Home, {\n      boards: boards,\n      setBoards: setBoards,\n      number: number,\n      user: user,\n      setNumber: setNumber,\n      increaseNumber: increaseNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"GFXNd5MkpPNG7+gRvRVkrsJUi2w=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","Header","Footer","Home","useEffect","jsxDEV","_jsxDEV","HomePage","_s","boards","setBoards","number","setNumber","user","setUser","increaseNumber","data","id","title","content","username","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/workspace/react work/react-my-app/src/pages/HomePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport Home from '../components/home/Home';\r\nimport { useEffect } from 'react';\r\n\r\nconst HomePage = () => {\r\n  // http 요청을 한다고 가정(js에서 http요청은 jquery ajax(외부lib), fetch(네이티브js), axios(외부lib)\r\n  // 근데 jquery는 쓰지마라)\r\n  // 이런 로직은 Header같은 컴포넌트만들어놓은 파일에선 하지마라 왜냐면 컴포넌트는 재사용되니까 필요없는데 딸려갈수도있음\r\n  // 그러니 변수저장이나 로직같은건 컴포넌트 조립하는 페이지파일에서 해라\r\n  const [boards, setBoards] = useState([]);\r\n  const [number, setNumber] = useState(0);\r\n  const [user, setUser] = useState([]);\r\n\r\n  const increaseNumber = () => {\r\n    setNumber(number + 1);\r\n  };\r\n\r\n  //최초 한번만 실행되게\r\n  useEffect(() => {\r\n    //http로 비동기 다운로드 했다고 가정\r\n    let data = [\r\n      { id: 1, title: 'title1', content: 'content1' },\r\n      { id: 2, title: 'title2', content: 'content2' },\r\n      { id: 3, title: 'title3', content: 'content3' },\r\n    ];\r\n\r\n    //비동기 다운로드 했으니 다운 다 안돼도 화면은 뜰거임 그럼 다운 다 되기전엔 해당 값이 비어있다\r\n    //다운이 다 되고 아래의 setBoards를 실행하는 순간 state 값의 변화가 일어나니 재랜더링이 일어나서\r\n    //해당하는 값이 들어가게 될것 그래서 이 값은 반드시 state 값이여야 함 아니면 다운로드된 값이 보여지지 않음\r\n    setBoards([...data]);\r\n    setUser({ id: 1, username: 'ssar' });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* 이런식으로 tag의 속성처럼 값을 적어주면 해당 컴포넌트로 값이 넘어가는데 이걸 props라 한다 */}\r\n      <Home\r\n        boards={boards}\r\n        setBoards={setBoards}\r\n        number={number}\r\n        user={user}\r\n        setNumber={setNumber}\r\n        increaseNumber={increaseNumber}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA;EACA;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMe,cAAc,GAAGA,CAAA,KAAM;IAC3BH,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;EACvB,CAAC;;EAED;EACAP,SAAS,CAAC,MAAM;IACd;IACA,IAAIY,IAAI,GAAG,CACT;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAW,CAAC,EAC/C;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAW,CAAC,EAC/C;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAW,CAAC,CAChD;;IAED;IACA;IACA;IACAT,SAAS,CAAC,CAAC,GAAGM,IAAI,CAAC,CAAC;IACpBF,OAAO,CAAC;MAAEG,EAAE,EAAE,CAAC;MAAEG,QAAQ,EAAE;IAAO,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAAe,QAAA,eAEEf,OAAA,CAACH,IAAI;MACHM,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBC,MAAM,EAAEA,MAAO;MACfE,IAAI,EAAEA,IAAK;MACXD,SAAS,EAAEA,SAAU;MACrBG,cAAc,EAAEA;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA1CID,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}