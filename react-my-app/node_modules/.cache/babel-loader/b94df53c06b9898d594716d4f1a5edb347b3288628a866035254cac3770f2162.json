{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\react work\\\\react-my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { createRef, useEffect, useMemo, useRef, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [list, setList] = useState([{\n    id: 1,\n    name: 'kim1'\n  }, {\n    id: 2,\n    name: 'kim2'\n  }]);\n  const myRefs = Array.from({\n    length: list.length\n  }).map(() => /*#__PURE__*/createRef());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log(myRefs.current);\n        myRefs.map(ref => ref.current.style.background = 'red');\n      },\n      children: \"\\uC0C9 \\uBCC0\\uACBD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), list.map((user, i) => {\n      //map 에서 2번째 매개변수를 적어주면 반복문 i처럼 사용할 수 있다\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        ref: myRefs[i],\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GsSShCvg8dwohp4fqPV5RTvXmP8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createRef","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","App","_s","list","setList","id","name","myRefs","Array","from","length","map","children","onClick","console","log","current","ref","style","background","fileName","_jsxFileName","lineNumber","columnNumber","user","i","_c","$RefreshReg$"],"sources":["D:/workspace/react work/react-my-app/src/App.js"],"sourcesContent":["import { createRef, useEffect, useMemo, useRef, useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [list, setList] = useState([\r\n    { id: 1, name: 'kim1' },\r\n    { id: 2, name: 'kim2' },\r\n  ]);\r\n\r\n  const myRefs = Array.from({ length: list.length }).map(() => createRef());\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => {\r\n          console.log(myRefs.current);\r\n          myRefs.map((ref) => (ref.current.style.background = 'red'));\r\n        }}\r\n      >\r\n        색 변경\r\n      </button>\r\n\r\n      {list.map((user, i) => {\r\n        //map 에서 2번째 매개변수를 적어주면 반복문 i처럼 사용할 수 있다\r\n        return <h1 ref={myRefs[i]}>{user.name}</h1>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACvE,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAC/B;IAAEO,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAC,EACvB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAC,CACxB,CAAC;EAEF,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEP,IAAI,CAACO;EAAO,CAAC,CAAC,CAACC,GAAG,CAAC,mBAAMjB,SAAS,CAAC,CAAC,CAAC;EAEzE,oBACEM,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MACEa,OAAO,EAAEA,CAAA,KAAM;QACbC,OAAO,CAACC,GAAG,CAACR,MAAM,CAACS,OAAO,CAAC;QAC3BT,MAAM,CAACI,GAAG,CAAEM,GAAG,IAAMA,GAAG,CAACD,OAAO,CAACE,KAAK,CAACC,UAAU,GAAG,KAAM,CAAC;MAC7D,CAAE;MAAAP,QAAA,EACH;IAED;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERpB,IAAI,CAACQ,GAAG,CAAC,CAACa,IAAI,EAAEC,CAAC,KAAK;MACrB;MACA,oBAAOzB,OAAA;QAAIiB,GAAG,EAAEV,MAAM,CAACkB,CAAC,CAAE;QAAAb,QAAA,EAAEY,IAAI,CAAClB;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAC7C,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CAzBQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}