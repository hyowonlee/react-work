{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\react work\\\\react-my-app\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Header from '../components/Header';\nimport Login from '../components/login/Login';\nimport Footer from '../components/Footer';\nimport { useMatch, useNavigate, useNavigation } from 'react-router-dom';\n\n//components 폴더 안의 컴포넌트들을 합쳐서 로그인 페이지를 만드는 컴포넌트를 생성\n//메인 페이지에선 이 컴포넌트만 작성해주면 안에 있는 3개 컴포넌트를 한번에 생성\n//재사용도 굉장히 편하다\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const match = useMatch('/login/:id');\n  console.log(match);\n  console.log(match.pathname);\n  console.log(match.params.id);\n  const navigate = useNavigate(); // react router dom v5 의 history와 같음 v6 넘어오면서 변경된거\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \" \\uB4A4\\uB85C\\uAC00\\uAE30 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      children: \" / \\uB85C \\uAC00\\uAE30 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"1j1kLdVvtRh5ebVK1EhKxMO5n/c=\", false, function () {\n  return [useMatch, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","Header","Login","Footer","useMatch","useNavigate","useNavigation","jsxDEV","_jsxDEV","LoginPage","_s","match","console","log","pathname","params","id","navigate","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/workspace/react work/react-my-app/src/pages/LoginPage.js"],"sourcesContent":["import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Login from '../components/login/Login';\r\nimport Footer from '../components/Footer';\r\nimport { useMatch, useNavigate, useNavigation } from 'react-router-dom';\r\n\r\n//components 폴더 안의 컴포넌트들을 합쳐서 로그인 페이지를 만드는 컴포넌트를 생성\r\n//메인 페이지에선 이 컴포넌트만 작성해주면 안에 있는 3개 컴포넌트를 한번에 생성\r\n//재사용도 굉장히 편하다\r\nconst LoginPage = () => {\r\n  const match = useMatch('/login/:id');\r\n  console.log(match);\r\n  console.log(match.pathname);\r\n  console.log(match.params.id);\r\n  const navigate = useNavigate(); // react router dom v5 의 history와 같음 v6 넘어오면서 변경된거\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => navigate(-1)}> 뒤로가기 </button>\r\n      <button onClick={() => navigate('/')}> / 로 가기 </button>\r\n      <Login />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,QAAQ,EAAEC,WAAW,EAAEC,aAAa,QAAQ,kBAAkB;;AAEvE;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,KAAK,GAAGP,QAAQ,CAAC,YAAY,CAAC;EACpCQ,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,CAAC;EAC3BF,OAAO,CAACC,GAAG,CAACF,KAAK,CAACI,MAAM,CAACC,EAAE,CAAC;EAC5B,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,oBACEG,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAQW,OAAO,EAAEA,CAAA,KAAMF,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpDf,OAAA;MAAQW,OAAO,EAAEA,CAAA,KAAMF,QAAQ,CAAC,GAAG,CAAE;MAAAC,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvDf,OAAA,CAACN,KAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACb,EAAA,CAdID,SAAS;EAAA,QACCL,QAAQ,EAILC,WAAW;AAAA;AAAAmB,EAAA,GALxBf,SAAS;AAgBf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}