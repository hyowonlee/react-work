{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\react work\\\\react-my-app\\\\src\\\\pages\\\\ListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListPage = () => {\n  _s();\n  const StyledItemBoxDiv = styled.div`\n    display: flex;\n    justify-content: space-between;\n    border: 1px solid black;\n    padding: 10px;\n    height: 100px;\n    margin: 20px;\n    align-items: center;\n  `;\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: '제목1',\n    content: '내용1'\n  }, {\n    id: 2,\n    title: '제목2',\n    content: '내용2'\n  }, {\n    id: 3,\n    title: '제목3',\n    content: '내용3'\n  }, {\n    id: 4,\n    title: '제목4',\n    content: '내용4'\n  }, {\n    id: 5,\n    title: '제목5',\n    content: '내용5'\n  }]);\n  const [post, setPost] = useState({\n    id: 6,\n    title: '',\n    content: ''\n  });\n  const handleWrite = () => {\n    setPost({\n      ...post,\n      id: post.id + 1\n    });\n    setPosts([...posts, post]);\n    // setId(id + 1);\n  };\n\n  const handleForm = e => {\n    console.log(e.target.name);\n    console.log(e.target.value);\n\n    //computed property name (js 문법 키값 동적할당)\n    //대괄호로 감싸면 해당 변수값이 key값으로 동적으로 할당됨 따라서 object를 변수로 생성가능\n    //(다른 언어들은 컴파일 후에 변수가 지정되니 안되기도 하고 key값쪽엔 원래 변수값이 못오고 string 만 오니까 안됨)\n    //이 문법을 사용해서 데이터가 작성되는 input태그를 동적으로 할당해서 칸이 여러개여도 하나의 함수로 동적으로 처리가능\n    //즉 여기에선 title, content빈칸에 대한 값 할당을 한번에 처리할 수 있는것\n    setPost({\n      ...post,\n      [e.target.name]: e.target.value\n    });\n    console.log(post);\n    console.log(post.title);\n    console.log(post.content);\n  };\n  const handleDelete = e => {\n    const remainPosts = posts.filter(n => {\n      return n.id != e.target.name;\n    });\n    console.log(remainPosts);\n    setPosts(remainPosts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB9AC\\uC2A4\\uD2B8 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC81C\\uBAA9\\uC785\\uB825\",\n        value: post.title,\n        onChange: handleForm,\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uB0B4\\uC6A9\\uC785\\uB825\",\n        value: post.content,\n        onChange: handleForm,\n        name: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleWrite,\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(StyledItemBoxDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uBC88\\uD638: \", post.id, \" / \\uC81C\\uBAA9: \", post.title, \" / \\uB0B4\\uC6A9: \", post.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        name: post.id,\n        onClick: handleDelete,\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ListPage, \"vxXwYCiGgVpSSbzcsGbmrd49G78=\");\n_c = ListPage;\nexport default ListPage;\nvar _c;\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","ListPage","_s","StyledItemBoxDiv","div","posts","setPosts","id","title","content","post","setPost","handleWrite","handleForm","e","console","log","target","name","value","handleDelete","remainPosts","filter","n","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["D:/workspace/react work/react-my-app/src/pages/ListPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ListPage = () => {\r\n  const StyledItemBoxDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border: 1px solid black;\r\n    padding: 10px;\r\n    height: 100px;\r\n    margin: 20px;\r\n    align-items: center;\r\n  `;\r\n\r\n  const [posts, setPosts] = useState([\r\n    { id: 1, title: '제목1', content: '내용1' },\r\n    { id: 2, title: '제목2', content: '내용2' },\r\n    { id: 3, title: '제목3', content: '내용3' },\r\n    { id: 4, title: '제목4', content: '내용4' },\r\n    { id: 5, title: '제목5', content: '내용5' },\r\n  ]);\r\n\r\n  const [post, setPost] = useState({\r\n    id: 6,\r\n    title: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleWrite = () => {\r\n    setPost({\r\n      ...post,\r\n      id: post.id + 1,\r\n    });\r\n    setPosts([...posts, post]);\r\n    // setId(id + 1);\r\n  };\r\n\r\n  const handleForm = (e) => {\r\n    console.log(e.target.name);\r\n    console.log(e.target.value);\r\n\r\n    //computed property name (js 문법 키값 동적할당)\r\n    //대괄호로 감싸면 해당 변수값이 key값으로 동적으로 할당됨 따라서 object를 변수로 생성가능\r\n    //(다른 언어들은 컴파일 후에 변수가 지정되니 안되기도 하고 key값쪽엔 원래 변수값이 못오고 string 만 오니까 안됨)\r\n    //이 문법을 사용해서 데이터가 작성되는 input태그를 동적으로 할당해서 칸이 여러개여도 하나의 함수로 동적으로 처리가능\r\n    //즉 여기에선 title, content빈칸에 대한 값 할당을 한번에 처리할 수 있는것\r\n    setPost({\r\n      ...post,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n    console.log(post);\r\n    console.log(post.title);\r\n    console.log(post.content);\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    const remainPosts = posts.filter((n) => {\r\n      return n.id != e.target.name;\r\n    });\r\n    console.log(remainPosts);\r\n    setPosts(remainPosts);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>리스트 페이지</h1>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"제목입력\"\r\n          value={post.title}\r\n          onChange={handleForm}\r\n          name=\"title\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"내용입력\"\r\n          value={post.content}\r\n          onChange={handleForm}\r\n          name=\"content\"\r\n        />\r\n        {/* button 태그를 그냥 form에서 submit 되도록 사용할 수도 있는데 대신 form 태그 속성에서 onSubmit으로 이 handleWrite를 실행해야하고\r\n        form 태그에서 submit이 되면 새로고침이 되기에 form의 새로고침을 막는 <함수의매개변수>.preventDefault()를 handleWrite에서 실행시키면 됨*/}\r\n        <button type=\"button\" onClick={handleWrite}>\r\n          글쓰기\r\n        </button>\r\n      </form>\r\n      <hr />\r\n      {posts.map((post) => (\r\n        <StyledItemBoxDiv>\r\n          <div>\r\n            번호: {post.id} / 제목: {post.title} / 내용: {post.content}\r\n          </div>\r\n          <button type=\"button\" name={post.id} onClick={handleDelete}>\r\n            삭제\r\n          </button>\r\n        </StyledItemBoxDiv>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}