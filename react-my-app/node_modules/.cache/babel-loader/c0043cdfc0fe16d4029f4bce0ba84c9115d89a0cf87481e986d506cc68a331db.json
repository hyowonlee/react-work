{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\react work\\\\react-my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log('App실행됨');\n  let sample = [{\n    id: 1,\n    name: 'kim1'\n  }, {\n    id: 2,\n    name: 'kim2'\n  }];\n  const [users, setUsers] = useState(sample);\n  const download = () => {\n    setUsers(sample); // 이렇게 일땐 users와 sample은 똑같은 데이터이지만 서로 주소가 다름\n    //그래서 다른 데이터로 인식해 재랜더링 됨\n    //만약 최초 데이터와 주소값이 서로 같다면 재랜더링 안됨\n\n    //setUsers([...sample]); // 이렇게 하면 주소값이 다르니 재랜더링 될 것\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: download,\n      children: \"download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [user.id, \", \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x0IirIDt7u7ok9DUVZ0TkT4g47Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","console","log","sample","id","name","users","setUsers","download","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","user","_c","$RefreshReg$"],"sources":["D:/workspace/react work/react-my-app/src/App.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  console.log('App실행됨');\r\n\r\n  let sample = [\r\n    { id: 1, name: 'kim1' },\r\n    { id: 2, name: 'kim2' },\r\n  ];\r\n\r\n  const [users, setUsers] = useState(sample);\r\n\r\n  const download = () => {\r\n    setUsers(sample); // 이렇게 일땐 users와 sample은 똑같은 데이터이지만 서로 주소가 다름\r\n    //그래서 다른 데이터로 인식해 재랜더링 됨\r\n    //만약 최초 데이터와 주소값이 서로 같다면 재랜더링 안됨\r\n\r\n    //setUsers([...sample]); // 이렇게 하면 주소값이 다르니 재랜더링 될 것\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={download}>download</button>\r\n      {users.map((user) => (\r\n        <h1>\r\n          {user.id}, {user.name}\r\n        </h1>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EAErB,IAAIC,MAAM,GAAG,CACX;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAC,EACvB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAC,CACxB;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACO,MAAM,CAAC;EAE1C,MAAMK,QAAQ,GAAGA,CAAA,KAAM;IACrBD,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC;IAClB;IACA;;IAEA;EACF,CAAC;;EAED,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAQY,OAAO,EAAEF,QAAS;MAAAC,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3CR,KAAK,CAACS,GAAG,CAAEC,IAAI,iBACdlB,OAAA;MAAAW,QAAA,GACGO,IAAI,CAACZ,EAAE,EAAC,IAAE,EAACY,IAAI,CAACX,IAAI;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACd,EAAA,CA5BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}